[scenario]
#textdomain wesnoth-Eliador
id=eliador-illien
next_scenario=eliador-home
name= _ "Othello of Illien"
victory_when_enemies_defeated=no
map_data="{@campaigns/Eliador/maps/eliador-illien}"

turns=36

{FIRST_WATCH}
{SECOND_WATCH}
{DAWN}
{MORNING}
{AFTERNOON}
{DUSK}

music=wesnoth-5.ogg

[label]
  x,y=3,9
  text="I"
[/label]
[label]
  x,y=4,9
  text="II"
[/label]
[label]
  x,y=5,10
  text="III"
[/label]
[label]
  x,y=6,10
  text="IV"
[/label]
[label]
  x,y=7,11
  text="V"
[/label]
[label]
  x,y=8,11
  text="VI"
[/label]

[label]
  x,y=3,8
  text="A"
[/label]
[label]
  x,y=4,7
  text="B"
[/label]
[label]
  x,y=5,7
  text="C"
[/label]
[label]
  x,y=6,6
  text="D"
[/label]
[label]
  x,y=7,6
  text="E"
[/label]
[label]
  x,y=8,5
  text="F"
[/label]

[side]
  side=1
  team_name=good
  controller=human
  type=Outlaw Queen
  description=Ardella
  canrecruit=1
[/side]

[side]
  side=2
  team_name=good
  controller=null
[/side]

[side]
  side=3
  team_name=good
  no_leader=yes
  controller=null
  colour=1
[/side]

#define OTHELLO_INIT_VARIABLES
{VARIABLE x_1_1 4}
{VARIABLE y_1_1 8}
{VARIABLE x_1_2 5}
{VARIABLE y_1_2 8}
{VARIABLE x_1_3 6}
{VARIABLE y_1_3 7}
{VARIABLE x_1_4 7}
{VARIABLE y_1_4 7}
{VARIABLE x_1_5 8}
{VARIABLE y_1_5 6}
{VARIABLE x_1_6 9}
{VARIABLE y_1_6 6}
{VARIABLE x_2_1 5}
{VARIABLE y_2_1 9}
{VARIABLE x_2_2 6}
{VARIABLE y_2_2 8}
{VARIABLE x_2_3 7}
{VARIABLE y_2_3 8}
{VARIABLE x_2_4 8}
{VARIABLE y_2_4 7}
{VARIABLE x_2_5 9}
{VARIABLE y_2_5 7}
{VARIABLE x_2_6 10}
{VARIABLE y_2_6 6}
{VARIABLE x_3_1 6}
{VARIABLE y_3_1 9}
{VARIABLE x_3_2 7}
{VARIABLE y_3_2 9}
{VARIABLE x_3_3 8}
{VARIABLE y_3_3 8}
{VARIABLE x_3_4 9}
{VARIABLE y_3_4 8}
{VARIABLE x_3_5 10}
{VARIABLE y_3_5 7}
{VARIABLE x_3_6 11}
{VARIABLE y_3_6 7}
{VARIABLE x_4_1 7}
{VARIABLE y_4_1 10}
{VARIABLE x_4_2 8}
{VARIABLE y_4_2 9}
{VARIABLE x_4_3 9}
{VARIABLE y_4_3 9}
{VARIABLE x_4_4 10}
{VARIABLE y_4_4 8}
{VARIABLE x_4_5 11}
{VARIABLE y_4_5 8}
{VARIABLE x_4_6 12}
{VARIABLE y_4_6 7}
{VARIABLE x_5_1 8}
{VARIABLE y_5_1 10}
{VARIABLE x_5_2 9}
{VARIABLE y_5_2 10}
{VARIABLE x_5_3 10}
{VARIABLE y_5_3 9}
{VARIABLE x_5_4 11}
{VARIABLE y_5_4 9}
{VARIABLE x_5_5 12}
{VARIABLE y_5_5 8}
{VARIABLE x_5_6 13}
{VARIABLE y_5_6 8}
{VARIABLE x_6_1 9}
{VARIABLE y_6_1 11}
{VARIABLE x_6_2 10}
{VARIABLE y_6_2 10}
{VARIABLE x_6_3 11}
{VARIABLE y_6_3 10}
{VARIABLE x_6_4 12}
{VARIABLE y_6_4 9}
{VARIABLE x_6_5 13}
{VARIABLE y_6_5 9}
{VARIABLE x_6_6 14}
{VARIABLE y_6_6 8}
[store_locations]
  variable=ardella_team_loc
  x=8,8,8,10,10,10,7,7,7,11,11,11,6,6,6,12,12,12,5,5,5,13,13,13,4,4,4,14,14,14,3,3,15,15
  y=1,2,3,1,2,3,2,3,4,2,3,4,2,3,4,2,3,4,3,4,5,3,4,5,3,4,5,3,4,5,4,5,4,5
[/store_locations]
{VARIABLE player_loc_idx 0}
#enddef

#define OTHELLO_CLEAR_VARIABLES
{VARIABLE i 1}
[while]
  [variable]
    name=i
    less_than=7
  [/variable]
  [do]
    {CLEAR_VARIABLE x_1_$i}
    {CLEAR_VARIABLE x_2_$i}
    {CLEAR_VARIABLE x_3_$i}
    {CLEAR_VARIABLE x_4_$i}
    {CLEAR_VARIABLE x_5_$i}
    {CLEAR_VARIABLE x_6_$i}
    {CLEAR_VARIABLE y_1_$i}
    {CLEAR_VARIABLE y_2_$i}
    {CLEAR_VARIABLE y_3_$i}
    {CLEAR_VARIABLE y_4_$i}
    {CLEAR_VARIABLE y_5_$i}
    {CLEAR_VARIABLE y_6_$i}
    {VARIABLE_OP i add 1}
  [/do]
[/while]
{CLEAR_VARIABLE ardella_team_loc}
{CLEAR_VARIABLE player_loc_idx}
#enddef

#
# Save units lost to Othello so that they can return for the battle
#

#define STORE_OTHELLO_UNITS
[store_unit]
  variable=othello_store
  kill=yes
  [filter]
    [not]
      description=Othello
    [/not]
    [not]
      type=Skeletal Dragon
    [/not]
    side=2
  [/filter]
[/store_unit]
#enddef

[event] 
  name=prestart 

  [objectives]
    side=1
    summary=Play a game of Othello
		[objective]
		  description= _ "You don't lose Anna or Zeke"
		  condition=win
   	[/objective]
		[objective]
		  description= _ "You lose Anna or Zeke"
		  condition=lose
   	[/objective]
		[objective]
		  description= _ "Turns run out"
		  condition=lose
   	[/objective]
  [/objectives]

  {OTHELLO_INIT_VARIABLES}

  #Put kids behind Ardella
  [recall]
    side=1
    description=Anna
    x,y=9,2
  [/recall]
  [recall]
    side=1
    description=Zeke
    x,y=9,3
  [/recall]

  #Place rest of side in castle
  {VARIABLE i 0}
  [while]
    [variable]
      name=i
      less_than=$ardella_team_loc.length
    [/variable]
    [do]
      {VARIABLE_OP spawn_x format ($ardella_team_loc[$i].x)}
      {VARIABLE_OP spawn_y format ($ardella_team_loc[$i].y)}
      [recall]
        side=1
        x=$spawn_x
        y=$spawn_y
      [/recall]
      {VARIABLE_OP i add 1}
    [/do]
  [/while]

  {CLEAR_VARIABLE spawn_x}
  {CLEAR_VARIABLE spawn_y}

  #Ensure that players can't be moved
  [store_unit]
    variable=ardella_team_store
    kill=yes
    [filter]
      side=1
      x=1-20
      y=1-5
      [not]
        description=Ardella
      [/not]
    [/filter]
  [/store_unit]
  {VARIABLE i 0}
  [while]
    [variable]
      name=i
      less_than=$ardella_team_store.length
    [/variable]
    [do]
      {VARIABLE ardella_team_store[$i].side 3}
      [unstore_unit]
        variable=ardella_team_store[$i]
      [/unstore_unit]
      {VARIABLE_OP i add 1}
    [/do]
  [/while]

  {UNIT (Dark Sorcerer) Othello ( _ "Othello") 2 9 13}
[/event]

#define SET_AI_COORDS VAR VAL X Y
[if]
  [variable]
    name={VAR}
    equals={VAL}
  [/variable]
  [then]
    {VARIABLE ai_x ({X})}
    {VARIABLE ai_y ({Y})}
  [/then]
[/if]
#enddef

#define AI_MOVE COL ROW
{VARIABLE col ({COL})}
{SET_AI_COORDS col 1 10 11}
{SET_AI_COORDS col 2 11 11}
{SET_AI_COORDS col 3 12 10}
{SET_AI_COORDS col 4 13 10}
{SET_AI_COORDS col 5 14 9}
{SET_AI_COORDS col 6 15 9}

[kill]
  description=Dragon 2A
[/kill]
{MOVE_UNIT_CREATE (Skeletal Dragon) (Dragon 2A) 2 $ai_col_x $ai_col_y $ai_x $ai_y}
{VARIABLE ai_col_x $ai_x}
{VARIABLE ai_col_y $ai_y}
[delay]
  time=1000
[/delay]

{VARIABLE row ({ROW})}
{SET_AI_COORDS row 1 10 5}
{SET_AI_COORDS row 2 11 6}
{SET_AI_COORDS row 3 12 6}
{SET_AI_COORDS row 4 13 7}
{SET_AI_COORDS row 5 14 7}
{SET_AI_COORDS row 6 15 8}

[kill]
  description=Dragon 2B
[/kill]
{MOVE_UNIT_CREATE (Skeletal Dragon) (Dragon 2B) 2 $ai_row_x $ai_row_y $ai_x $ai_y}
{VARIABLE ai_row_x $ai_x}
{VARIABLE ai_row_y $ai_y}
[delay]
  time=200
[/delay]

{GET_XY ({ROW}) ({COL})}
[scroll_to]
  x=$got_x
  y=$got_y
[/scroll_to]
[delay]
  time=200
[/delay]
{CREATE_UNIT (Skeleton,Skeleton Archer) 2 $got_x $got_y}
#enddef 

#define GET_COL_ROW TYPE SIDE X
{VARIABLE ({TYPE}) ({X})}
{VARIABLE side_moved ({SIDE})}

[if]
  [variable]
    name=side_moved
    equals=2
  [/variable]
  [then]
    {VARIABLE add_amt -7}
  [/then]
  [else]
    {VARIABLE add_amt -2}
  [/else]
[/if]

{VARIABLE_OP ({TYPE}) add $add_amt}
#enddef

#define GET_XY ROW COL
{VARIABLE r ({ROW})}
{VARIABLE c ({COL})} 
[set_variable]
  name=got_x
  to_variable=x_|$r|_|$c|
[/set_variable]
[set_variable]
  name=got_y
  to_variable=y_|$r|_|$c|
[/set_variable]
#enddef

#define CHECK_MOVE COL ROW COL_COMP COL_BOUND ROW_COMP ROW_BOUND COL_ADD ROW_ADD YOUR_SIDE OTHER_SIDE DIR
{VARIABLE can_move_dir no}
{VARIABLE col ({COL})}
{VARIABLE row ({ROW})}

#Check if at least one enemy before one of your players
{VARIABLE_OP col add ({COL_ADD})}
{VARIABLE_OP row add ({ROW_ADD})}
{VARIABLE other_count 0}
{GET_XY $row $col}
[while]
  [variable]
    name=col
    {COL_COMP}={COL_BOUND}
  [/variable]
  [variable]
    name=row
    {ROW_COMP}={ROW_BOUND}
  [/variable]
  [have_unit]
    x=$got_x
    y=$got_y
    side={OTHER_SIDE}
  [/have_unit]
  [do]
    {VARIABLE_OP col add ({COL_ADD})}
    {VARIABLE_OP row add ({ROW_ADD})}
    {VARIABLE_OP other_count add 1}
    {GET_XY $row $col}
  [/do]
[/while]

#Check if last unit in line is yours
[if]
  [variable]
    name=other_count
    greater_than=0
  [/variable]
  [variable]
    name=col
    {COL_COMP}={COL_BOUND}
  [/variable]
  [variable]
    name=row
    {ROW_COMP}={ROW_BOUND}
  [/variable]
  [have_unit]
    x=$got_x
    y=$got_y
    side={YOUR_SIDE}
  [/have_unit]
  [then]
    {VARIABLE ({DIR}) yes}
    {VARIABLE can_move yes}
  [/then]
[/if]
#enddef

#define CAN_MOVE COL ROW YOUR_SIDE OTHER_SIDE
{VARIABLE dir_left no}
{VARIABLE dir_right no}
{VARIABLE dir_up no}
{VARIABLE dir_down no}
{VARIABLE dir_diagup no}
{VARIABLE dir_diagdown no}
{VARIABLE can_move no}

{GET_XY ({ROW}) ({COL})}

[if]
  [have_unit]
    x=$got_x
    y=$got_y
  [/have_unit]
  [else]
    {CHECK_MOVE ({COL}) ({ROW}) greater_than 0 greater_than 0 -1 0 ({YOU_SIDE}) ({OTHER_SIDE}) dir_left}
    {CHECK_MOVE ({COL}) ({ROW}) less_than 7 greater_than 0 1 0 ({YOU_SIDE}) ({OTHER_SIDE}) dir_right}
    {CHECK_MOVE ({COL}) ({ROW}) greater_than 0 greater_than 0 0 -1 ({YOU_SIDE}) ({OTHER_SIDE}) dir_up}
    {CHECK_MOVE ({COL}) ({ROW}) greater_than 0 less_than 7 0 1 ({YOU_SIDE}) ({OTHER_SIDE}) dir_down}
    {CHECK_MOVE ({COL}) ({ROW}) less_than 7 greater_than 0 1 -1 ({YOU_SIDE}) ({OTHER_SIDE}) dir_diagup}
    {CHECK_MOVE ({COL}) ({ROW}) greater_than 0 less_than 7 -1 1 ({YOU_SIDE}) ({OTHER_SIDE}) dir_diagdown}

  [/else]
[/if]
#enddef

#define CHANGE_SIDES_DIR COL ROW YOUR_SIDE OTHER_SIDE COL_ADD ROW_ADD DIR
[if]
  [variable]
    name={DIR}
    equals=yes
  [/variable]
  [then]
    {VARIABLE i ({COL})}
    {VARIABLE j ({ROW})}
    {VARIABLE_OP i add ({COL_ADD})}
    {VARIABLE_OP j add ({ROW_ADD})}
    {GET_XY $j $i} 
    [while]
      [have_unit]
        side={OTHER_SIDE}
        x=$got_x
        y=$got_y
      [/have_unit]
      [do]
        [store_unit]
          variable=sideswap_store
          kill=yes
          [filter]
            x=$got_x
            y=$got_y
          [/filter]
        [/store_unit]
        {VARIABLE sideswap_store[0].side ({YOUR_SIDE})}
        [unstore_unit]
          variable=sideswap_store[0]
        [/unstore_unit]
        {CLEAR_VARIABLE sideswap_store}
        {VARIABLE_OP i add ({COL_ADD})}
        {VARIABLE_OP j add ({ROW_ADD})}
        {GET_XY $j $i} 
      [/do]
    [/while]
  [/then]
[/if]
#enddef

#define CHANGE_SIDES COL ROW YOUR_SIDE OTHER_SIDE
{CHANGE_SIDES_DIR ({COL}) ({ROW}) ({YOUR_SIDE}) ({OTHER_SIDE}) -1 0 dir_left}
{CHANGE_SIDES_DIR ({COL}) ({ROW}) ({YOUR_SIDE}) ({OTHER_SIDE}) 1 0 dir_right}
{CHANGE_SIDES_DIR ({COL}) ({ROW}) ({YOUR_SIDE}) ({OTHER_SIDE}) 0 -1 dir_up}
{CHANGE_SIDES_DIR ({COL}) ({ROW}) ({YOUR_SIDE}) ({OTHER_SIDE}) 0 1 dir_down}
{CHANGE_SIDES_DIR ({COL}) ({ROW}) ({YOUR_SIDE}) ({OTHER_SIDE}) 1 -1 dir_diagup}
{CHANGE_SIDES_DIR ({COL}) ({ROW}) ({YOUR_SIDE}) ({OTHER_SIDE}) -1 1 dir_diagdown}
#enddef

#define CHECK_PLAYER_MOVE COL ROW
[if]
  [variable]  
    name=can_move
    equals=no
  [/variable]
  [then]
    {CAN_MOVE ({COL}) ({ROW}) 3 2}
  [/then]
[/if]
#enddef

#define PLAYER_CAN_MOVE
{VARIABLE r_idx 0}

[while]
  [variable]
    name=r_idx
    less_than=7
  [/variable]
  [variable]  
    name=can_move
    equals=no
  [/variable]
  [do]
    {CHECK_PLAYER_MOVE 1 $r_idx}
    {CHECK_PLAYER_MOVE 2 $r_idx}
    {CHECK_PLAYER_MOVE 3 $r_idx}
    {CHECK_PLAYER_MOVE 4 $r_idx}
    {CHECK_PLAYER_MOVE 5 $r_idx}
    {CHECK_PLAYER_MOVE 6 $r_idx}
    {VARIABLE_OP r_idx add 1}
  [/do]
[/while]
#Ardella can't move if no more units
[if]
  [have_unit]
    side=3
    x=1-20
    y=1-5
  [/have_unit]
  [else]
    {VARIABLE can_move no}
  [/else]
[/if]
#enddef

#define AI_CAN_MOVE COL ROW
[if]
  [variable]  
    name=can_move
    equals=no
  [/variable]
  [then]
    {CAN_MOVE ({COL}) ({ROW}) 2 3}
    {VARIABLE ai_move_col 0}
    {VARIABLE ai_move_row 0}
    [if]
      [variable]
        name=can_move
        equals=yes
      [/variable]
      [then]
        {VARIABLE ai_move_col ({COL})}
        {VARIABLE ai_move_row ({ROW})}
      [/then]
    [/if]
  [/then]
[/if]
#enddef

[event]
  name=side turn
  first_time_only=no
  {CAN_MOVE $player_col $player_row 3 2}

  [if]
    [variable]
      name=can_move
      equals=yes
    [/variable]
    [have_unit]
      side=3
      x=1-20
      y=1-5
    [/have_unit]
    [then]
      {GET_XY $player_row $player_col}
      {VARIABLE_OP xxx format $ardella_team_loc[$player_loc_idx].x}
      {VARIABLE_OP yyy format $ardella_team_loc[$player_loc_idx].y}
      {VARIABLE_OP player_loc_idx add 1}

      [scroll_to]
        x=$got_x
        y=$got_y
      [/scroll_to]

      [teleport]
        [filter]
          side=3
          x=$xxx
          y=$yyy
        [/filter]
        x=$got_x
        y=$got_y
      [/teleport]
      {CHANGE_SIDES $player_col $player_row 3 2}
      [redraw]
      [/redraw]
      [delay]
        time=1000
      [/delay]
    [/then]
  [/if]

  [redraw]
  [/redraw]

  #Othello's turn
  {VARIABLE can_move no}

  {RANDOM 1..2}
  [if]
    [variable]
      name=random
      equals=1
    [/variable]
    [then]
      #First check corners
      {AI_CAN_MOVE 6 1}
      {AI_CAN_MOVE 6 6}
      {AI_CAN_MOVE 1 1}
      {AI_CAN_MOVE 1 6}
      #Then check edge hexes not next to corners
      {AI_CAN_MOVE 3 6}
      {AI_CAN_MOVE 4 6}
      {AI_CAN_MOVE 6 3}
      {AI_CAN_MOVE 6 4}
      {AI_CAN_MOVE 3 1}
      {AI_CAN_MOVE 4 1}
      {AI_CAN_MOVE 1 3}
      {AI_CAN_MOVE 1 4}
      #Check middle hexes not near corners
      {AI_CAN_MOVE 3 2}
      {AI_CAN_MOVE 4 2}
      {AI_CAN_MOVE 2 3}
      {AI_CAN_MOVE 5 3}
      {AI_CAN_MOVE 2 4}
      {AI_CAN_MOVE 5 4}
      {AI_CAN_MOVE 3 5}
      {AI_CAN_MOVE 4 5}
      {AI_CAN_MOVE 5 5}
      {AI_CAN_MOVE 2 2}
      #Finally, check hexes next to corners
      {AI_CAN_MOVE 1 2}
      {AI_CAN_MOVE 2 1}
      {AI_CAN_MOVE 5 6}
      {AI_CAN_MOVE 6 5}
      {AI_CAN_MOVE 5 1}
      {AI_CAN_MOVE 1 5}
      {AI_CAN_MOVE 6 2}
      {AI_CAN_MOVE 2 6}
      {AI_CAN_MOVE 5 2}
      {AI_CAN_MOVE 2 5}
    [/then]
    [else]
      #First check corners
      {AI_CAN_MOVE 1 1}
      {AI_CAN_MOVE 1 6}
      {AI_CAN_MOVE 6 1}
      {AI_CAN_MOVE 6 6}
      #Then check edge hexes not next to corners
      {AI_CAN_MOVE 3 1}
      {AI_CAN_MOVE 4 1}
      {AI_CAN_MOVE 1 3}
      {AI_CAN_MOVE 1 4}
      {AI_CAN_MOVE 3 6}
      {AI_CAN_MOVE 4 6}
      {AI_CAN_MOVE 6 3}
      {AI_CAN_MOVE 6 4}
      #Check middle hexes not near corners
      {AI_CAN_MOVE 2 4}
      {AI_CAN_MOVE 5 4}
      {AI_CAN_MOVE 3 5}
      {AI_CAN_MOVE 4 5}
      {AI_CAN_MOVE 3 2}
      {AI_CAN_MOVE 4 2}
      {AI_CAN_MOVE 2 3}
      {AI_CAN_MOVE 5 3}
      {AI_CAN_MOVE 2 2}
      {AI_CAN_MOVE 5 5}
      #Finally, check hexes next to corners
      {AI_CAN_MOVE 5 1}
      {AI_CAN_MOVE 1 5}
      {AI_CAN_MOVE 6 2}
      {AI_CAN_MOVE 2 6}
      {AI_CAN_MOVE 5 6}
      {AI_CAN_MOVE 6 5}
      {AI_CAN_MOVE 1 2}
      {AI_CAN_MOVE 2 1}
      {AI_CAN_MOVE 2 5}
      {AI_CAN_MOVE 5 2}
    [/else]
  [/if]

  #Try to move Othello's undead
  [if]
    [variable]
      name=can_move
      equals=no
    [/variable]
    [then]
      #Game over if neither team has a move
      {PLAYER_CAN_MOVE}
      [if]
        [variable]
          name=can_move
          equals=no
        [/variable]
        [then]
          {OTHELLO_CLEAR_VARIABLES}
          #Victory if you didn't lose kids
          [if]  
            [have_unit]
              description=Zeke
              side=3
            [/have_unit]
            [have_unit]
              description=Anna
              side=3
            [/have_unit]
            [then]
              [message]
                description=Othello
                message= _ "Well done, Ardella, you've protected your children. You can keep the skeletons that you've won, and I'll keep any man or creature that you've lost. Goodbye."
              [/message]
              [kill]
                type=Skeletal Dragon
              [/kill]
              {CHANGE_SIDE_ALL 3 1}
              {STORE_OTHELLO_UNITS}
              {ELIADOR_VICTORY}
            [/then]
            #Defeat if you lost kids
            [else]
              [message]
                description=Othello
                message= _ "You've sacrificed your children in an attempt to save your soldiers. Your heart is even colder than mine."
              [/message]
              {ELIADOR_DEFEAT}
            [/else]
          [/if]
        [/then]
      [/if]
    [/then]
    [else]
      {AI_MOVE $ai_move_col $ai_move_row}
      {CHANGE_SIDES $ai_move_col $ai_move_row 2 3}
      [redraw]
      [/redraw]
      [delay]
        time=1000
      [/delay]
    [/else]
  [/if]
[/event]

[event]
  name=start

  [message]
    description=Othello
    message= _ "Ardella, I'm sure you're aware of the law of Illien. Are you prepared?"
  [/message]

  [message]
    description=Ardella
    message= _ "You must know by now that we are about to be invaded. We don't have time for your games. Will you help us repel the invasion?"
  [/message]

  [message]
    description=Othello
    message= _ "If you do not obey the law of Illien, my undead will annihilate your pathetic army. Now, let's begin, shall we?"
  [/message]

  {VARIABLE player_col 4}
  {VARIABLE player_row 4}
  {UNIT (Skeletal Dragon) (Dragon 1A) ( _ "Dragon 1A") 1 6 6}
  {UNIT (Skeletal Dragon) (Dragon 1B) ( _ "Dragon 1B") 1 6 10}

  [message]
    description=Zeke
    message= _ "Momma, what's happening? I can't move!"
  [/message]

  [teleport]
    [filter]
      description=Zeke
    [/filter]
    x,y=8,8
  [/teleport]

  [teleport]
    [filter]
      description=Anna
    [/filter]
    x,y=10,8
  [/teleport]

  [redraw]
  [/redraw]

  [scroll_to_unit]
    description=Zeke
  [/scroll_to_unit]

  [delay]
    time=1500
  [/delay]

  {VARIABLE ai_col_x 18}
  {VARIABLE ai_col_y 17}
  {VARIABLE ai_row_x 18}
  {VARIABLE ai_row_y 17}
  {AI_MOVE 4 3}
  {AI_MOVE 3 4}
  [redraw]
  [/redraw]
  [delay]
    time=1000
  [/delay]
  [message]
    description=Zeke
    message= _ "Ahh!"
  [/message]

  [message]
    description=Othello
    message= _ "Your move, Ardella."
  [/message]
[/event]

[event]
  name=moveto
  first_time_only=no
  [filter]
    side=1
    description=Ardella
  [/filter]
  [teleport]
    [filter]
      description=Ardella
    [/filter]
    x,y=9,4
  [/teleport]
[/event]

#define MOVE_DRAGON DESC MOVE_VAR VALID_X VALID_Y DEF_X DEF_Y
[event]
  name=moveto
  first_time_only=no
  [filter]
    description={DESC}
  [/filter]

  {VARIABLE ({MOVE_VAR}) $x1}
      
  [if]
    [have_unit]
      description={DESC}
      x={VALID_X}
      y={VALID_Y}
    [/have_unit]
    [else]
      [teleport]
        [filter]
          description={DESC}
        [/filter]
        x={DEF_X}
        y={DEF_Y}
      [/teleport]
      {VARIABLE ({MOVE_VAR}) ({DEF_X})}
    [/else]
  [/if]

  {VARIABLE_OP ({MOVE_VAR}) add -2}
      
  {CLEAR_VARIABLE dragon_loc}
[/event]
#enddef

{MOVE_DRAGON (Dragon 1A) player_col (3,4,5,6,7,8) (8,7,7,6,6,5) 3 8}
{MOVE_DRAGON (Dragon 1B) player_row (3,4,5,6,7,8) (9,9,10,10,11,11) 3 9}

[/scenario]
